openapi: "3.1.0"
info:
  title: Auth Controller API
  description: Authentication operations for login, token refresh, and logout.
  version: "1.0.0"
  contact:
    name: Immortals Team

servers:
  - url: /api/v1/auth
    description: Authentication API server

paths:
  /login:
    get:
      summary: User Login
      operationId: login
      description: Authenticates a user and returns an access token.
      tags: [ Authentication ]
      security:
        - GuestAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '200':
          description: Successful login, access token returned in header.
          headers:
            Authorization:
              description: JWT access token with Bearer prefix.
              schema:
                type: string
                example: "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          content:
            application/json:
              schema:
                type: string
                example: "Login successful"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /refresh/{username}:
    get:
      summary: Generate Refresh Token
      operationId: generateRefreshToken
      description: Generates a new refresh token for the given username and sets it as a secure cookie.
      tags: [ Authentication ]
      security:
        - GuestAuth: [ ]
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
          description: User's username
      responses:
        '200':
          description: New refresh token generated and set as cookie.
          content:
            application/json:
              schema:
                type: string
                example: "Refresh token generated successfully"
        '404':
          $ref: '#/components/responses/NotFound'

  /logout:
    delete:
      summary: Logout User
      operationId: logout
      description: Logs out the user and clears refresh token cookie.
      tags: [ Authentication ]
      security:
        - GuestAuth: [ ]
      responses:
        '204':
          description: User logged out successfully, no content returned.
        '401':
          $ref: '#/components/responses/Unauthorized'

components:
  securitySchemes:
    GuestAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Requires a Bearer token with GUEST role.

  schemas:
    LoginDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          format: password
      required:
        - username
        - password

    ApiErrorResponse:
      type: object
      properties:
        httpStatus:
          type: string
          description: HTTP status code as a string
        timeStamp:
          type: string
          format: date-time
        moreInfo:
          type: string
        errorCode:
          type: integer
        errorMessage:
          type: string
        errors:
          type: array
          items:
            type: string

  responses:
    BadRequest:
      description: Bad request - validation error or invalid input.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorResponse'

    Unauthorized:
      description: Unauthorized - authentication required.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorResponse'

    NotFound:
      description: Resource not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorResponse'

tags:
  - name: Authentication
    description: Authentication related operations
